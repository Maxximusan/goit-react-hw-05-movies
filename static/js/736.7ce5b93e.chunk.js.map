{"version":3,"file":"static/js/736.7ce5b93e.chunk.js","mappings":"qPAEaA,EAAYC,EAAAA,GAAAA,GAAH,0EAMTC,EAAYD,EAAAA,GAAAA,GAAH,0GAMTE,EAAOF,EAAAA,GAAAA,EAAH,0CAIJG,EAAYH,EAAAA,GAAAA,EAAH,oE,SC2BtB,EAxCa,WAGT,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,SAAAC,GAC1BJ,EAAQI,EAAOC,KAAKN,MACpBO,QAAQC,IAAIH,EAAOC,KAAKN,KAC3B,IAAES,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,EAAhB,GACjB,GAAE,CAACb,KAGA,8BACKG,IACG,SAAC,EAAD,UACKA,EAAKW,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,aAAcC,EAApB,EAAoBA,KAAMC,EAA1B,EAA0BA,UAA1B,OACN,UAAC,EAAD,WACKF,GACD,gBAAKG,IAAG,yCAAoCH,GAAgBI,IAAKH,KAEjE,gBAAKE,IAAK,6BAA8BC,IAAKH,KAEjD,SAAC,EAAD,UAAUA,KACV,UAAC,EAAD,yBAA0BC,OAPPH,EADb,OAgB7B,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ActorList = styled.ul`\n    display: flex;\nflex-wrap: wrap;\ngap: 20px;\n`;\n\nexport const ActorItem = styled.li`\n    /* text-decoration: none; */\n    list-style: none;\n    /* width: 150px; */\n`;\n\nexport const Name = styled.p`\n    color: blue;\n`;\n\nexport const Charaster = styled.p`\n    color: #149b14;\n    max-width: 200px;\n`","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {APImovieCredits} from '../../Api/API-themoviedborg'\nimport * as SC from 'components/Cast/Cast.styled'\n\nconst Cast = () => {\n\n    \n    const { movieId } = useParams();\n\n    //  APImovieCredits(movieId).then(result => {\n    //     console.log(result.data.cast);\n    \n    // })\n    const [cast, setCast] = useState(null);\n\n    useEffect(() => {\n        APImovieCredits(movieId).then(result => {\n            setCast(result.data.cast)\n            console.log(result.data.cast);\n        }).catch(error => console.log(error))\n    }, [movieId]);\n   \n    return (\n        <>\n            {cast && (\n                <SC.ActorList>\n                    {cast.map(({id, profile_path, name, character}) => (\n                        <SC.ActorItem key={id}>\n                            {profile_path ? (\n                            <img src={`https://image.tmdb.org/t/p/w200${profile_path}`} alt={name} />\n                            ) : (\n                            <img src={'https://dummyimage.com/200'} alt={name}/>\n                                )}\n                        <SC.Name>{name}</SC.Name>\n                        <SC.Charaster>Charaster: {character}</SC.Charaster>\n                        </SC.ActorItem>\n                        \n                        ))}\n            </SC.ActorList>\n            )}\n        </>\n    )\n}\n\nexport default Cast"],"names":["ActorList","styled","ActorItem","Name","Charaster","movieId","useParams","useState","cast","setCast","useEffect","APImovieCredits","then","result","data","console","log","catch","error","map","id","profile_path","name","character","src","alt"],"sourceRoot":""}