{"version":3,"file":"static/js/798.7a68c119.chunk.js","mappings":"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","sources":["components/SearchForm/SerchForm.styled.jsx","components/SearchForm/SearchForm.jsx","components/MovieListAfterSearch/MovieListAfterSearch.styled.jsx","components/MovieListAfterSearch/MovieListAfterSearch.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Forma = styled.form`\n  /* display: flex;\n  justify-content: space-evenly; */\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  grid-gap: 80px;\n  margin-bottom: 20px;\n`;\nexport const Button = styled.button`\n  border-radius: 20px;\n  cursor: pointer;\n  font-size: ${p => p.theme.fontSizes.s};\n  color: yellow;\n  background-color: #027902b9;\n  border: none;\n\n  @keyframes changeColor {\n    0% {\n      color: yellow;\n      background-color: #027902b9;\n    }\n    50% {\n      color: #f84d36;\n      background-color: #023279b8;\n    }\n\n    100% {\n      color: yellow;\n      background-color: #027902b9;\n    }\n  }\n  animation-name: changeColor;\n  animation-duration: 10000ms;\n  animation-delay: 1000ms;\n  animation-iteration-count: infinite;\n\n\n  @media screen and (min-width: 320px) and (max-width: 479px){\n    font-size: ${p => p.theme.fontSizes.xs};\n  }\n\n@media screen and (min-width: 480px) and (max-width: 767px){\n  font-size: ${p => p.theme.fontSizes.s};\n  }\n\n@media screen and (min-width: 768px) and (max-width: 1199px){\n  font-size: ${p => p.theme.fontSizes.m};\n  }\n\n@media screen and (min-width: 1200px) {\n\n  font-size: ${p => p.theme.fontSizes.l};\n \n  }\n`;\nexport const SearchInput = styled.input`\n \n\n  @media screen and (min-width: 320px) and (max-width: 479px){\n    font-size: ${p => p.theme.fontSizes.xs};\n}\n\n@media screen and (min-width: 480px) and (max-width: 767px){\n  font-size: ${p => p.theme.fontSizes.s};\n}\n\n@media screen and (min-width: 768px) and (max-width: 1199px){\nfont-size: ${p => p.theme.fontSizes.m};\n}\n\n@media screen and (min-width: 1200px) {\n\nfont-size: ${p => p.theme.fontSizes.l};\n\n}\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport * as SC from 'components/SearchForm/SerchForm.styled';\n\nexport const SearchForm = props => {\n  const { onSearch, setIsFormSubmit, setIsLoader } = props;\n\n  const [value, setValue] = useState('');\n\n  const submitForm = event => {\n    event.preventDefault();\n    \n    if (value.trim() === '') {\n      toast.warning('Your search-query is empty');\n      return;\n    }\n    onSearch(value);\n    setValue('');\n    setIsFormSubmit(true);\n    setIsLoader(true);\n  };\n\n  const onInputChange = event => {\n    setValue(event.currentTarget.value.toLowerCase());\n    setIsFormSubmit(false);\n  };\n\n  return (\n    <>\n      <SC.Forma onSubmit={submitForm}>\n        <SC.Button type=\"submit\">Chose? Push here!</SC.Button>\n        <SC.SearchInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search films\"\n          onChange={onInputChange}\n          value={value}\n        />\n      </SC.Forma>\n    </>\n  );\n};\n\nSearchForm.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const P = styled.p`\n  color: ${p => p.theme.colors.primary};\n  height: 100vw;\n`;\n\nexport const Gallery = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\n  grid-gap: 20px;\n  padding-bottom: ${p => p.theme.space[6]}px;\n`;\nexport const Li = styled.li`\n  /* max-height: 400px; */\n  @media screen and (min-width: 330px) and (max-width: 491px){\n    width: 300px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  @media screen and (min-width: 615px) and (max-width: 731px){\n    width: 290px;\n    &:nth-child(even){\n      margin-right: auto;\n    }\n    &:nth-child(odd){\n    margin-left: auto;\n  }\n  }\n\n  \n`;\nexport const Card = styled.div`\n  display: flex;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n  flex-direction: column;\n  height: 96%;\n\n  padding: 7px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px 1px #f18383;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    box-shadow: 0 0 13px 3px #ff0000;\n    transform: scale(1.04);\n  }\n`;\n\nexport const Title = styled.p`\n  display: flex;\n  padding: 5px;\n  color: ${p => p.theme.colors.accent};\n`;\n","// import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation, Link } from 'react-router-dom';\nimport * as SC from 'components/MovieListAfterSearch/MovieListAfterSearch.styled';\nimport { Box } from 'components/Box';\nimport { showPoster } from 'helpers/stubForImage';\n\nexport const MovieListAterSearch = props => {\n  const { film } = props;\n\n  const location = useLocation();\n\n  return (\n    <Box>\n      {film && film.length > 0 ? (\n        <SC.Gallery>\n          {film.map(({ title, id, poster_path }) => (\n            <SC.Li key={id}>\n              <Link to={`${id}`} state={{ from: location }}>\n                <SC.Card>\n                  <img\n                    src={showPoster(poster_path)}\n                    alt={title}\n                    width=\"250\"\n                    height=\"330\"\n                  />\n                  <SC.Title>{title}</SC.Title>\n                </SC.Card>\n              </Link>\n            </SC.Li>\n          ))}\n        </SC.Gallery>\n      ) : (\n        <SC.P> We are waiting for your choose...</SC.P>\n      )}\n    </Box>\n  );\n};\n\nMovieListAterSearch.propTypes = {\n  film: PropTypes.arrayOf(PropTypes.object),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nimport { APIsearchMovie } from '../Api/API-themoviedborg';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { MovieListAterSearch } from 'components/MovieListAfterSearch/MovieListAfterSearch';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [film, setFilm] = useState([]);\n  const [searchParam, setSearchParam] = useSearchParams();\n  const [isFormSubmit, setIsFormSubmit] = useState(false);\n  const [isLoader, setIsLoader] = useState(false);\n\n  const searchFilm = event => {\n    setSearchParam({ query: event });\n  };\n\n  useEffect(() => {\n    const query = searchParam.get('query') ?? '';\n    if (query) {\n      APIsearchMovie(query).then(result => {\n        if (result.data.results.length === 0 && isFormSubmit) {\n          setIsLoader(false);\n          return toast.info('Sorry, not found movies by your request');\n        }\n        setFilm(result.data.results);\n        setIsLoader(false);\n        // console.log(result.data);\n      });\n    }\n  }, [searchParam, isFormSubmit]);\n\n  return (\n    <>\n      <SearchForm\n        onSearch={searchFilm}\n        setIsFormSubmit={setIsFormSubmit}\n        setIsLoader={setIsLoader}\n      />\n      {isLoader ? <Loader /> : <MovieListAterSearch film={film} />}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["Forma","styled","Button","p","theme","fontSizes","s","xs","m","l","SearchInput","SearchForm","props","onSearch","setIsFormSubmit","setIsLoader","useState","value","setValue","onSubmit","event","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","P","colors","primary","Gallery","space","Li","Card","Title","accent","MovieListAterSearch","film","location","useLocation","Box","length","map","title","id","poster_path","to","state","from","src","showPoster","alt","width","height","setFilm","useSearchParams","searchParam","setSearchParam","isFormSubmit","isLoader","useEffect","query","get","APIsearchMovie","then","result","data","results","Loader"],"sourceRoot":""}